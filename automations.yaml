- alias: weektimer_program
  description: read values from weekt schedule and apply to zone thermostats
  trigger:
  - platform: state
    entity_id: sensor.heating_program
  condition:
  - condition: state
    entity_id: input_boolean.heating_master
    state: 'on'
  action:
  - service: climate.set_temperature
    data_template:
      entity_id: climate.ha_thermo
      temperature: '{% if is_state(''sensor.heating_program'', ''p1'') %} {{ states.input_number.t1_temp.state
        }} {% elif is_state(''sensor.heating_program'', ''p2'') %} {{ states.input_number.t2_temp.state
        }} {% elif is_state(''sensor.heating_program'', ''p3'') %} {{ states.input_number.t3_temp.state
        }} {% elif is_state(''sensor.heating_program'', ''p4'') %} {{ states.input_number.t4_temp.state
        }} {% elif is_state(''sensor.heating_program'', ''p5'') %} {{ states.input_number.t5_temp.state
        }} {% elif is_state(''sensor.heating_program'', ''p6'') %} {{ states.input_number.t6_temp.state
        }} {% elif is_state(''sensor.heating_program'', ''p7'') %} {{ states.input_number.t7_temp.state
        }} {% elif is_state(''sensor.heating_program'', ''p8'') %} {{ states.input_number.t8_temp.state
        }} {% elif is_state(''sensor.heating_program'', ''p0'') %} {{ states.input_number.t0_temp.state
        }} {% endif %}  '
  - service: climate.set_temperature
    data_template:
      entity_id: climate.sitting_room_thermostat
      temperature: '{% if is_state(''sensor.heating_program'', ''p1'') %} {{ states.input_number.t1_sitting_room.state
        }} {% elif is_state(''sensor.heating_program'', ''p2'') %} {{ states.input_number.t2_sitting_room.state
        }} {% elif is_state(''sensor.heating_program'', ''p3'') %} {{ states.input_number.t3_sitting_room.state
        }} {% elif is_state(''sensor.heating_program'', ''p4'') %} {{ states.input_number.t4_sitting_room.state
        }} {% elif is_state(''sensor.heating_program'', ''p5'') %} {{ states.input_number.t5_sitting_room.state
        }} {% elif is_state(''sensor.heating_program'', ''p6'') %} {{ states.input_number.t6_sitting_room.state
        }} {% elif is_state(''sensor.heating_program'', ''p7'') %} {{ states.input_number.t7_sitting_room.state
        }} {% elif is_state(''sensor.heating_program'', ''p8'') %} {{ states.input_number.t8_sitting_room.state
        }} {% elif is_state(''sensor.heating_program'', ''p0'') %} {{ states.input_number.t0_temp.state
        }} {% endif %}'
  - service: climate.set_temperature
    data_template:
      entity_id: climate.upstairs
      temperature: '{% if is_state(''sensor.heating_program'', ''p1'') %} {{ states.input_number.t1_upstairs.state
        }} {% elif is_state(''sensor.heating_program'', ''p2'') %} {{ states.input_number.t2_upstairs.state
        }} {% elif is_state(''sensor.heating_program'', ''p3'') %} {{ states.input_number.t3_upstairs.state
        }} {% elif is_state(''sensor.heating_program'', ''p4'') %} {{ states.input_number.t4_upstairs.state
        }} {% elif is_state(''sensor.heating_program'', ''p5'') %} {{ states.input_number.t5_upstairs.state
        }} {% elif is_state(''sensor.heating_program'', ''p6'') %} {{ states.input_number.t6_upstairs.state
        }} {% elif is_state(''sensor.heating_program'', ''p7'') %} {{ states.input_number.t7_upstairs.state
        }} {% elif is_state(''sensor.heating_program'', ''p8'') %} {{ states.input_number.t8_upstairs.state
        }} {% elif is_state(''sensor.heating_program'', ''p0'') %} {{ states.input_number.t0_temp.state
        }} {% endif %}  '
  id: 47141d0a7f8d420885cd15bc3cbb5888
- id: '1577612881345'
  alias: valves on
  description: TRV valves on, energise where nessacery on boiler start
  trigger:
  - entity_id: switch.boiler
    from: 'off'
    platform: state
    to: 'on'
  condition: []
  action:
  - service: climate.set_hvac_mode
    entity_id: climate.sitting_room_thermostat
    data:
      hvac_mode: heat
- id: '1577612972092'
  alias: valves off
  description: TRV Valves off to save being energised unnecessarily
  trigger:
  - entity_id: switch.boiler
    from: 'on'
    platform: state
    to: 'off'
  condition: []
  action:
  - service: climate.set_hvac_mode
    entity_id: climate.sitting_room_thermostat
    data:
      hvac_mode: 'off'
- id: '1578520268091'
  alias: Immersion Timer
  description: Immersion Boost on for preset time
  trigger:
  - entity_id: input_boolean.switch_immersion_timer
    platform: state
    to: 'on'
  condition: []
  action:
  - service: climate.set_hvac_mode
    entity_id: climate.hw_thermostat
    data_template:
      hvac_mode: heat
  - service: climate.set_temperature
    data_template:
      entity_id: climate.hw_thermostat
      temperature: '{{ states.input_number.immersion_temp.state }}'
- id: '1578521662871'
  alias: Immersion timed off
  description: Immersion Boost off after preset time
  trigger:
  - platform: state
    entity_id: input_boolean.switch_immersion_timer
    to: 'off'
  - platform: state
    entity_id: input_boolean.switch_immersion_timer
    to: 'on'
    for:
      minutes: '{{ states.input_number.immersion_timer.state | int }}'
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.switch_immersion_timer
  - service: climate.set_hvac_mode
    entity_id: climate.hw_thermostat
    data:
      hvac_mode: 'off'
- id: '1578520268092'
  alias: HW Boiler Timer
  description: HW Boiler Boost on for preset time
  trigger:
  - entity_id: input_boolean.switch_hw_timer
    platform: state
    to: 'on'
  condition: []
  action:
  - service: climate.set_hvac_mode
    entity_id: climate.hw_zone_thermostat
    data_template:
      hvac_mode: heat
  - service: climate.set_temperature
    data_template:
      entity_id: climate.hw_zone_thermostat
      temperature: '{{ states.input_number.immersion_temp.state }}'
- id: '1578521662872'
  alias: HW Boiler timed off after preset time
  description: HW Boiler Boost off
  trigger:
  - platform: state
    entity_id: input_boolean.switch_hw_timer
    to: 'off'
  - platform: state
    entity_id: input_boolean.switch_hw_timer
    to: 'on'
    for:
      minutes: '{{ states.input_number.immersion_timer.state | int }}'
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.switch_hw_timer
  - service: climate.set_hvac_mode
    entity_id: climate.hw_zone_thermostat
    data:
      hvac_mode: 'off'
- id: '1578653513704'
  alias: Immersion On Time
  description: Immersion Automatic On Time
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.immersion_auto_on.state[0:5]
      }}'
  condition: []
  action:
  - entity_id: input_boolean.switch_immersion_timer
    service: input_boolean.turn_on
- id: '1578653513705'
  alias: HW On Time
  description: HW Automatic On Time
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == states.input_datetime.immersion_auto_on.state[0:5]
      }}'
  condition: []
  action:
  - entity_id: input_boolean.switch_hw_timer
    service: input_boolean.turn_on
- id: '1593289562360'
  alias: Downstairs Stat to virtual map
  description: map physical controls onto virtual thermostat
  trigger:
  - entity_id: sensor.downstairs_target_temp
    platform: state
  condition: []
  action:
  - data: {}
    service: climate.set_temperature
    data_template:
      entity_id: climate.ha_thermo
      temperature: '{{ states.climate.downstairs.attributes.temperature }}'
- id: '1593289562361'
  alias: virtual stat to Downstairs map
  description: map virtual controls onto physical thermostat
  trigger:
  - entity_id: sensor.hvac_temperature_knob
    platform: state
  condition: []
  action:
  - data: {}
    service: climate.set_temperature
    data_template:
      entity_id: climate.downstairs
      temperature: '{{ states.climate.ha_thermo.attributes.temperature }}'
- id: '1593289562362'
  alias: Upstairs Stat to virtual map
  description: map physical controls onto virtual thermostat
  trigger:
  - entity_id: sensor.upstairs_target_temp
    platform: state
  condition: []
  action:
  - data: {}
    service: climate.set_temperature
    data_template:
      entity_id: climate.ha_upstairs
      temperature: '{{ states.climate.upstairs.attributes.temperature }}'
- id: '1593289562363'
  alias: virtual stat to Upstairs map
  description: map virtual controls onto physical thermostat
  trigger:
  - entity_id: sensor.ha_upstairs_temperature_knob
    platform: state
  condition: []
  action:
  - data: {}
    service: climate.set_temperature
    data_template:
      entity_id: climate.upstairs
      temperature: '{{ states.climate.ha_upstairs.attributes.temperature }}'
- id: '1594755819541'
  alias: Boiler On
  description: Turn On Boiler If any master thermostat calls for heat
  trigger:
  - entity_id: input_boolean.switch_upstairs
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: input_boolean.switch_downstairs
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.hw_zone_valve
    from: 'off'
    platform: state
    to: 'on'
  condition: []
  action:
  - data: {}
    entity_id: switch.boiler
    service: switch.turn_on
- id: '1594756361977'
  alias: Boiler off
  description: Turn Off Boiler if no master stat is calling for heat
  trigger:
  - entity_id: input_boolean.switch_downstairs
    from: 'on'
    platform: state
    to: 'off'
  - entity_id: input_boolean.switch_upstairs
    from: 'on'
    platform: state
    to: 'off'
  - entity_id: switch.hw_zone_valve
    from: 'on'
    platform: state
    to: 'off'
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: input_boolean.switch_upstairs
      state: 'off'
    - condition: state
      entity_id: input_boolean.switch_downstairs
      state: 'off'
    - condition: state
      entity_id: switch.hw_zone_valve
      state: 'off'
  action:
  - data: {}
    entity_id: switch.boiler
    service: switch.turn_off
-